# ovarian<-mutate(ovarian,age_group=ifelse(age>=50,"old","young"))
# #ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
# # %>% is called multiple times to "chain" functions together
# # iris %>% head() %>% summary() is the same as: summary(head(iris))
# ovarian$age_group<-factor(ovarian$age_group)
#
# # fit survival data using the kaplan-Meier method
# surv_object<-Surv(time=ovarian$futime,event=ovarian$fustat)
# surv_object
#
# fit1<-survfit(surv_object~rx,data=ovarian)
# summary(fit1)
#
# ggsurvplot(fit1,data=ovarian,pval=TRUE)
debugSource('E:/Hongming/projects/tcga-lung-LUAD/Hongming_codes/5)survival_analysis/tcga_luad_tmb_2class.R')
View(pid)
View(pid)
View(plabel)
debugSource('E:/Hongming/projects/tcga-lung-LUAD/Hongming_codes/5)survival_analysis/tcga_luad_tmb_2class.R')
View(plabel)
plabel
sum(plabel=="Low")
sum(plabel=="High")
View(plabel)
View(plabel)
View(plabel)
plabel[100]
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
path <- system.file("mat-files", package = "R.matlab")
pathname <- file.path("E:/Hongming/projects/tcga-lung-LUAD/Hongming_codes/5)survival_analysis/predictions/", "p_xception_pca40_km.mat")
luad_pre<-readMat(pathname)
pid<-vector()
plabel<-vector()
for (kk in 1:length(luad_pre[[1]])/3){
pid[kk]<-luad_pre[[1]][[kk]]
#plabel[kk]<-luad_pre[[1]][[kk+length(luad_pre[[1]])/3]]      # prediction labels
plabel[kk]<-luad_pre[[1]][[kk+length(luad_pre[[1]])*2/3]]   # ground truth labels
}
luad_pred<-data.frame("patientID"=Reduce(rbind,pid),"TMB_class"=Reduce(rbind,plabel))
#write.xlsx(blca,"blca.xlsx")
data_path<-"E:/Hongming/projects/tcga-lung-luad-TIL/"
luad_data<-read_excel(paste(data_path,"tcga_lung_luad_clinical.xlsx",sep=""),sheet="Sheet1")
futime<-vector()
fustat<-vector()
for (nn in 1:length(luad_pred$patientID))
{
temp_pID=as.character(luad_pred$patientID[nn])
for (kk in 1:length(luad_data$`bcr_patient_barcode`))
{
if (substring(temp_pID,1,12)==as.character(luad_data$`bcr_patient_barcode`[kk]))
{
futime<-c(futime,as.numeric(luad_data$`OS.time`[kk]))
fustat<-c(fustat,as.character(luad_data$`vital_status`[kk]))
break
}
}
}
luad_pred$futime<-futime
luad_pred$fustat<-fustat
#row_ind<-which(is.na(blca_pred$futime))
#blca_pred<-blca_pred[-c(row_ind),]   # remove two not available patients
row_ind2<-which(luad_pred$futime<0)
if (length(row_ind2)>0)
{
luad_pred<-luad_pred[-c(row_ind2),]
}
#rownames(blca2)<-NULL # reorder row number
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
luad_pred$fustat <- factor(luad_pred$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
luad_pred$futime<-as.numeric(as.character(luad_pred$futime)) # note that: must be numeric type
luad_pred$fustat<-as.numeric(as.character(luad_pred$fustat)) # note that: must be numeric type
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=luad_pred$futime,event=luad_pred$fustat)
# surv_object
fit1<-survfit(surv_object~TMB_class,data=luad_pred)
# summary(fit1)
#
ggsurvplot(fit1,
legend=c(0.8,0.9),
legend.title="Predictions by proposed method",
legend.labs=c("High TMB","Low TMB"),
xscale="d_m",
#risk.table = TRUE,
#surv.median.line = "hv", # Add medians survival
xlab="Time in months",
pval=TRUE,
conf.int = TRUE,
tables.theme = theme_cleantable(),
palette = c("#FF9E29", "#86AA00"),
ggtheme = theme_gray()) # Change ggplot2 theme
#ggsave(filename = "survival_svgg16.eps",
#       fallback_resolution = 600,
#       device = cairo_ps)
# # import the ovarian cancer dataset
# data(ovarian)
# glimpse(ovarian)
#
# # dichotomize the age and change data labels
# ovarian$rx <- factor(ovarian$rx,
#                      levels=c("1","2"),
#                      labels=c("A","B"))
#
# ovarian$resid.ds<-factor(ovarian$resid.ds,
#                          level=c("1","2"),
#                          labels=c("no","yes"))
#
# ovarian$ecog.ps<-factor(ovarian$ecog.ps,
#                         levels=c("1","2"),
#                         labels=c("good","bad"))
#
# # Data seems to be biomodal
# hist(ovarian$age)
#
# ovarian<-mutate(ovarian,age_group=ifelse(age>=50,"old","young"))
# #ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
# # %>% is called multiple times to "chain" functions together
# # iris %>% head() %>% summary() is the same as: summary(head(iris))
# ovarian$age_group<-factor(ovarian$age_group)
#
# # fit survival data using the kaplan-Meier method
# surv_object<-Surv(time=ovarian$futime,event=ovarian$fustat)
# surv_object
#
# fit1<-survfit(surv_object~rx,data=ovarian)
# summary(fit1)
#
# ggsurvplot(fit1,data=ovarian,pval=TRUE)
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
path <- system.file("mat-files", package = "R.matlab")
pathname <- file.path("E:/Hongming/projects/tcga-lung-LUAD/Hongming_codes/5)survival_analysis/predictions/", "p_xception_pca40_km.mat")
luad_pre<-readMat(pathname)
pid<-vector()
plabel<-vector()
for (kk in 1:length(luad_pre[[1]])/3){
pid[kk]<-luad_pre[[1]][[kk]]
plabel[kk]<-luad_pre[[1]][[kk+length(luad_pre[[1]])/3]]      # prediction labels
#plabel[kk]<-luad_pre[[1]][[kk+length(luad_pre[[1]])*2/3]]   # ground truth labels
}
luad_pred<-data.frame("patientID"=Reduce(rbind,pid),"TMB_class"=Reduce(rbind,plabel))
#write.xlsx(blca,"blca.xlsx")
data_path<-"E:/Hongming/projects/tcga-lung-luad-TIL/"
luad_data<-read_excel(paste(data_path,"tcga_lung_luad_clinical.xlsx",sep=""),sheet="Sheet1")
futime<-vector()
fustat<-vector()
for (nn in 1:length(luad_pred$patientID))
{
temp_pID=as.character(luad_pred$patientID[nn])
for (kk in 1:length(luad_data$`bcr_patient_barcode`))
{
if (substring(temp_pID,1,12)==as.character(luad_data$`bcr_patient_barcode`[kk]))
{
futime<-c(futime,as.numeric(luad_data$`OS.time`[kk]))
fustat<-c(fustat,as.character(luad_data$`vital_status`[kk]))
break
}
}
}
luad_pred$futime<-futime
luad_pred$fustat<-fustat
#row_ind<-which(is.na(blca_pred$futime))
#blca_pred<-blca_pred[-c(row_ind),]   # remove two not available patients
row_ind2<-which(luad_pred$futime<0)
if (length(row_ind2)>0)
{
luad_pred<-luad_pred[-c(row_ind2),]
}
#rownames(blca2)<-NULL # reorder row number
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
luad_pred$fustat <- factor(luad_pred$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
luad_pred$futime<-as.numeric(as.character(luad_pred$futime)) # note that: must be numeric type
luad_pred$fustat<-as.numeric(as.character(luad_pred$fustat)) # note that: must be numeric type
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=luad_pred$futime,event=luad_pred$fustat)
# surv_object
fit1<-survfit(surv_object~TMB_class,data=luad_pred)
# summary(fit1)
#
ggsurvplot(fit1,
legend=c(0.8,0.9),
legend.title="Predictions by proposed method",
legend.labs=c("High TMB","Low TMB"),
xscale="d_m",
#risk.table = TRUE,
#surv.median.line = "hv", # Add medians survival
xlab="Time in months",
pval=TRUE,
conf.int = TRUE,
tables.theme = theme_cleantable(),
palette = c("#FF9E29", "#86AA00"),
ggtheme = theme_gray()) # Change ggplot2 theme
#ggsave(filename = "survival_svgg16.eps",
#       fallback_resolution = 600,
#       device = cairo_ps)
# # import the ovarian cancer dataset
# data(ovarian)
# glimpse(ovarian)
#
# # dichotomize the age and change data labels
# ovarian$rx <- factor(ovarian$rx,
#                      levels=c("1","2"),
#                      labels=c("A","B"))
#
# ovarian$resid.ds<-factor(ovarian$resid.ds,
#                          level=c("1","2"),
#                          labels=c("no","yes"))
#
# ovarian$ecog.ps<-factor(ovarian$ecog.ps,
#                         levels=c("1","2"),
#                         labels=c("good","bad"))
#
# # Data seems to be biomodal
# hist(ovarian$age)
#
# ovarian<-mutate(ovarian,age_group=ifelse(age>=50,"old","young"))
# #ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
# # %>% is called multiple times to "chain" functions together
# # iris %>% head() %>% summary() is the same as: summary(head(iris))
# ovarian$age_group<-factor(ovarian$age_group)
#
# # fit survival data using the kaplan-Meier method
# surv_object<-Surv(time=ovarian$futime,event=ovarian$fustat)
# surv_object
#
# fit1<-survfit(surv_object~rx,data=ovarian)
# summary(fit1)
#
# ggsurvplot(fit1,data=ovarian,pval=TRUE)
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
data_path<-"E:/Hongming/projects/tcga-bladder-mutationburden/Hongming_codes/"
blca_data<-read_excel(paste(data_path,"Table_S1.2017_08_05.xlsx",sep=""),sheet="Master table")
tmb<-blca_data$`total number Single Nucleotide Variants`
LI<-0.33
IH<-0.66
tLI<-quantile(tmb,probs=LI,names=FALSE)
tIH<-quantile(tmb,probs=IH,names=FALSE)
TMB_class<-cut(blca_data$`total number Single Nucleotide Variants`,
breaks=c(-1,tLI,tIH,Inf),labels=c("Low","Mid","High"))
blca<-data.frame("patientID"=blca_data$`Case ID`,
"futime"=blca_data$`Combined days to last followup or death`,
"fustat"=blca_data$`Vital status`,
"TMB"=blca_data$`total number Single Nucleotide Variants`,
"TMB_class"=TMB_class)
#write.xlsx(blca,"blca.xlsx")
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
blca$fustat <- factor(blca$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
image_path<-"E:/blca_mutationBurden/blca_wsi/"
files<-list.files(path=image_path,pattern = "\\.svs$")
selc<-rep(0,length(blca$patientID))
for (nn in 1:length(files)){
pID_ss=substring(files[nn],1,12)
for (mm in 1:length(blca$patientID)){
pID_oo=as.vector(blca$patientID[mm])
if (identical(pID_ss,pID_oo)){
selc[mm]=1
break
}
}
}
row_nos<-which(selc==0)
blca2<-blca[-c(row_nos),]   # remove not selected patients
futime_d<-as.numeric(as.character(blca2$futime))
row_ind<-which(is.na(futime_d))
blca2<-blca2[-c(row_ind),]   # remove two not available patients
blca2$futime<-as.numeric(as.character(blca2$futime))
blca2$fustat<-as.numeric(as.character(blca2$fustat))
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=blca2$futime,event=blca2$fustat)
# surv_object
#
fit1<-survfit(surv_object~TMB_class,data=blca2)
# summary(fit1)
#
ggsurvplot(fit1,data=blca2,pval=TRUE)
# # import the ovarian cancer dataset
# data(ovarian)
# glimpse(ovarian)
#
# # dichotomize the age and change data labels
# ovarian$rx <- factor(ovarian$rx,
#                      levels=c("1","2"),
#                      labels=c("A","B"))
#
# ovarian$resid.ds<-factor(ovarian$resid.ds,
#                          level=c("1","2"),
#                          labels=c("no","yes"))
#
# ovarian$ecog.ps<-factor(ovarian$ecog.ps,
#                         levels=c("1","2"),
#                         labels=c("good","bad"))
#
# # Data seems to be biomodal
# hist(ovarian$age)
#
# ovarian<-mutate(ovarian,age_group=ifelse(age>=50,"old","young"))
# #ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
# # %>% is called multiple times to "chain" functions together
# # iris %>% head() %>% summary() is the same as: summary(head(iris))
# ovarian$age_group<-factor(ovarian$age_group)
#
# # fit survival data using the kaplan-Meier method
# surv_object<-Surv(time=ovarian$futime,event=ovarian$fustat)
# surv_object
#
# fit1<-survfit(surv_object~rx,data=ovarian)
# summary(fit1)
#
# ggsurvplot(fit1,data=ovarian,pval=TRUE)
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
data_path<-"E:/Hongming/projects/tcga-bladder-mutationburden/Hongming_codes/"
blca_data<-read_excel(paste(data_path,"Table_S1.2017_08_05.xlsx",sep=""),sheet="Master table")
tmb<-blca_data$`total number Single Nucleotide Variants`
LI<-0.2
IH<-0.8
tLI<-quantile(tmb,probs=LI,names=FALSE)
tIH<-quantile(tmb,probs=IH,names=FALSE)
TMB_class<-cut(blca_data$`total number Single Nucleotide Variants`,
breaks=c(-1,tLI,tIH,Inf),labels=c("Low","Mid","High"))
blca<-data.frame("patientID"=blca_data$`Case ID`,
"futime"=blca_data$`Combined days to last followup or death`,
"fustat"=blca_data$`Vital status`,
"TMB"=blca_data$`total number Single Nucleotide Variants`,
"TMB_class"=TMB_class)
#write.xlsx(blca,"blca.xlsx")
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
blca$fustat <- factor(blca$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
image_path<-"E:/blca_mutationBurden/blca_wsi/"
files<-list.files(path=image_path,pattern = "\\.svs$")
selc<-rep(0,length(blca$patientID))
for (nn in 1:length(files)){
pID_ss=substring(files[nn],1,12)
for (mm in 1:length(blca$patientID)){
pID_oo=as.vector(blca$patientID[mm])
if (identical(pID_ss,pID_oo)){
selc[mm]=1
break
}
}
}
row_nos<-which(selc==0)
blca2<-blca[-c(row_nos),]   # remove not selected patients
futime_d<-as.numeric(as.character(blca2$futime))
row_ind<-which(is.na(futime_d))
blca2<-blca2[-c(row_ind),]   # remove two not available patients
blca2$futime<-as.numeric(as.character(blca2$futime))
blca2$fustat<-as.numeric(as.character(blca2$fustat))
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=blca2$futime,event=blca2$fustat)
# surv_object
#
fit1<-survfit(surv_object~TMB_class,data=blca2)
# summary(fit1)
#
ggsurvplot(fit1,data=blca2,pval=TRUE)
# # import the ovarian cancer dataset
# data(ovarian)
# glimpse(ovarian)
#
# # dichotomize the age and change data labels
# ovarian$rx <- factor(ovarian$rx,
#                      levels=c("1","2"),
#                      labels=c("A","B"))
#
# ovarian$resid.ds<-factor(ovarian$resid.ds,
#                          level=c("1","2"),
#                          labels=c("no","yes"))
#
# ovarian$ecog.ps<-factor(ovarian$ecog.ps,
#                         levels=c("1","2"),
#                         labels=c("good","bad"))
#
# # Data seems to be biomodal
# hist(ovarian$age)
#
# ovarian<-mutate(ovarian,age_group=ifelse(age>=50,"old","young"))
# #ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
# # %>% is called multiple times to "chain" functions together
# # iris %>% head() %>% summary() is the same as: summary(head(iris))
# ovarian$age_group<-factor(ovarian$age_group)
#
# # fit survival data using the kaplan-Meier method
# surv_object<-Surv(time=ovarian$futime,event=ovarian$fustat)
# surv_object
#
# fit1<-survfit(surv_object~rx,data=ovarian)
# summary(fit1)
#
# ggsurvplot(fit1,data=ovarian,pval=TRUE)
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
data_path<-"E:/Hongming/projects/tcga-bladder-mutationburden/Hongming_codes/"
blca_data<-read_excel(paste(data_path,"Table_S1.2017_08_05.xlsx",sep=""),sheet="Master table")
tmb<-blca_data$`total number Single Nucleotide Variants`
LI<-0.33
IH<-0.66
tLI<-quantile(tmb,probs=LI,names=FALSE)
tIH<-quantile(tmb,probs=IH,names=FALSE)
TMB_class<-cut(blca_data$`total number Single Nucleotide Variants`,
breaks=c(-1,tLI,tIH,Inf),labels=c("Low","Mid","High"))
blca<-data.frame("patientID"=blca_data$`Case ID`,
"futime"=blca_data$`Combined days to last followup or death`,
"fustat"=blca_data$`Vital status`,
"TMB"=blca_data$`total number Single Nucleotide Variants`,
"TMB_class"=TMB_class)
#write.xlsx(blca,"blca.xlsx")
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
blca$fustat <- factor(blca$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
image_path<-"E:/blca_mutationBurden/blca_wsi/"
files<-list.files(path=image_path,pattern = "\\.svs$")
selc<-rep(0,length(blca$patientID))
for (nn in 1:length(files)){
pID_ss=substring(files[nn],1,12)
for (mm in 1:length(blca$patientID)){
pID_oo=as.vector(blca$patientID[mm])
if (identical(pID_ss,pID_oo)){
selc[mm]=1
break
}
}
}
row_nos<-which(selc==0)
blca2<-blca[-c(row_nos),]   # remove not selected patients
futime_d<-as.numeric(as.character(blca2$futime))
row_ind<-which(is.na(futime_d))
blca2<-blca2[-c(row_ind),]   # remove two not available patients
blca2$futime<-as.numeric(as.character(blca2$futime))
blca2$fustat<-as.numeric(as.character(blca2$fustat))
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=blca2$futime,event=blca2$fustat)
# surv_object
#
fit1<-survfit(surv_object~TMB_class,data=blca2)
# summary(fit1)
#
ggsurvplot(fit1,data=blca2,pval=TRUE)
# # import the ovarian cancer dataset
# data(ovarian)
# glimpse(ovarian)
#
# # dichotomize the age and change data labels
# ovarian$rx <- factor(ovarian$rx,
#                      levels=c("1","2"),
#                      labels=c("A","B"))
#
# ovarian$resid.ds<-factor(ovarian$resid.ds,
#                          level=c("1","2"),
#                          labels=c("no","yes"))
#
# ovarian$ecog.ps<-factor(ovarian$ecog.ps,
#                         levels=c("1","2"),
#                         labels=c("good","bad"))
#
# # Data seems to be biomodal
# hist(ovarian$age)
#
# ovarian<-mutate(ovarian,age_group=ifelse(age>=50,"old","young"))
# #ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
# # %>% is called multiple times to "chain" functions together
# # iris %>% head() %>% summary() is the same as: summary(head(iris))
# ovarian$age_group<-factor(ovarian$age_group)
#
# # fit survival data using the kaplan-Meier method
# surv_object<-Surv(time=ovarian$futime,event=ovarian$fustat)
# surv_object
#
# fit1<-survfit(surv_object~rx,data=ovarian)
# summary(fit1)
#
# ggsurvplot(fit1,data=ovarian,pval=TRUE)
