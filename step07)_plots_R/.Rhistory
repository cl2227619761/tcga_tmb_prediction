fustat<-vector()
for (nn in 1:length(blca_pred$patientID))
{
temp_pID=as.character(blca_pred$patientID[nn])
for (kk in 1:length(blca_data$`Case ID`))
{
if (substring(temp_pID,1,12)==as.character(blca_data$`Case ID`[kk]))
{
futime<-c(futime,as.numeric(blca_data$`Combined days to last followup or death`[kk])/30.0)
fustat<-c(fustat,as.character(blca_data$`Vital status`[kk]))
break
}
}
}
blca_pred$futime<-futime
blca_pred$fustat<-fustat
row_ind<-which(is.na(blca_pred$futime))
if (length(row_ind)>0) {
blca_pred<-blca_pred[-c(row_ind),]   # remove two not available patients
}
row_ind2<-which(blca_pred$futime<0)
if (length(row_ind2)>0){
blca_pred<-blca_pred[-c(row_ind2),]
}
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
blca_pred$fustat <- factor(blca_pred$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
blca_pred$futime<-as.numeric(as.character(blca_pred$futime)) # note that: must be numeric type
blca_pred$fustat<-as.numeric(as.character(blca_pred$fustat)) # note that: must be numeric type
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=blca_pred$futime,event=blca_pred$fustat)
# surv_object
fit1<-survfit(surv_object~label_class,data=blca_pred)
# summary(fit1)
#setEPS()
#postscript("whatever.eps")
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.8,0.9),
legend.labs=c("High-Low (173)","Low-Low (195)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
#dev.off()
ggsave(filename = "km_2class_all2.eps",
fallback_resolution = 600,
device = cairo_ps)
# function to plot KM curves
# high vs low for all patients
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
data_path0<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/patients_all/"
pid_tmb_pred<-read_excel(paste(data_path0,"pid_tmb_pred.xlsx",sep=""),sheet = "Sheet1")
#data_path0<-"E:/Hongming/projects/tcga-bladder-mutationburden/heatmap_blca/"
#pid_pred_gt<-read_excel(paste(data_path0,"pid_pred_gt.xlsx",sep=""),sheet = "Sheet1")
data_path1<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/patients_all/"
entropy_all<-read_excel(paste(data_path1,"entropy_all.xlsx",sep=""),sheet = "Sheet1")
pvalue<-entropy_all$entropy
pid<-entropy_all$`patient ID`
plabel<-vector()
plabel1<-vector()
for (kk in 1:length(pid)){
temp_pID<-substring(as.character(pid[kk]),2,24)
for (jj in 1:length(pid_tmb_pred$`patient_names`))
if (temp_pID==substring(as.character(pid_tmb_pred$`patient_names`[jj]),1,23)){
plabel[kk]<-paste(pid_tmb_pred$preds[jj])
break
}
}
pid2<-vector()
plabel2<-vector()
ind=1
for (kk in 1:length(pid)){
if (plabel[kk]=="High") {
pid2[ind]<-substring(pid[kk],2,24)
plabel2[ind]<-plabel[kk]
ind<-ind+1
} else if (plabel[kk]=="Low"){
pid2[ind]<-substring(pid[kk],2,24)
plabel2[ind]<-plabel[kk]
ind<-ind+1
}
else {
print('skip!')
}
}
blca_pred<-data.frame("patientID"=Reduce(rbind,pid2),"label_class"=Reduce(rbind,plabel2))
#write.xlsx(blca,"blca.xlsx")
data_path<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/"
blca_data<-read_excel(paste(data_path,"Table_S1.2017_08_05.xlsx",sep=""),sheet="Master table")
futime<-vector()
fustat<-vector()
for (nn in 1:length(blca_pred$patientID))
{
temp_pID=as.character(blca_pred$patientID[nn])
for (kk in 1:length(blca_data$`Case ID`))
{
if (substring(temp_pID,1,12)==as.character(blca_data$`Case ID`[kk]))
{
futime<-c(futime,as.numeric(blca_data$`Combined days to last followup or death`[kk])/30.0)
fustat<-c(fustat,as.character(blca_data$`Vital status`[kk]))
break
}
}
}
blca_pred$futime<-futime
blca_pred$fustat<-fustat
row_ind<-which(is.na(blca_pred$futime))
if (length(row_ind)>0) {
blca_pred<-blca_pred[-c(row_ind),]   # remove two not available patients
}
row_ind2<-which(blca_pred$futime<0)
if (length(row_ind2)>0){
blca_pred<-blca_pred[-c(row_ind2),]
}
# dichotomize the dead/alive and change data labels
# dead: censored 1, alive 0
blca_pred$fustat <- factor(blca_pred$fustat,
levels=c("Dead","Alive"),
labels=c("1","0"))
blca_pred$futime<-as.numeric(as.character(blca_pred$futime)) # note that: must be numeric type
blca_pred$fustat<-as.numeric(as.character(blca_pred$fustat)) # note that: must be numeric type
# fit survival data using the kaplan-Meier method
surv_object<-Surv(time=blca_pred$futime,event=blca_pred$fustat)
# surv_object
fit1<-survfit(surv_object~label_class,data=blca_pred)
# summary(fit1)
#setEPS()
#postscript("whatever.eps")
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.8,0.9),
legend.labs=c("High (173)","Low (195)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
#dev.off()
ggsave(filename = "km_2class_all1.eps",
fallback_resolution = 600,
device = cairo_ps)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hl_hothers_others.R')
ggsurvplot(fit1,pval = TRUE,
risk.table = TRUE,
legend=c(0.8,0.9),
#legend.labs=c("High-Low (76)","Low-Low (108)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.8,0.9),
legend.labs=c("High-Low (76)","High-High (97)", "Low (195)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
#dev.off()
ggsave(filename = "km_3class_all2.eps",
fallback_resolution = 600,
device = cairo_ps)
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.8,0.9),
legend.labs=c("High-High (97)","High-Low (76)", "Low (195)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
#dev.off()
ggsave(filename = "km_3class_all2.eps",
fallback_resolution = 600,
device = cairo_ps)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_all_patients.R')
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.75,0.85),
legend.labs=c("High-Low (85)","Others (283)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
ggsurvplot(fit1,pval = TRUE,
risk.table = TRUE,
legend=c(0.75,0.85),
#legend.labs=c("High-Low (85)","Others (283)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.75,0.85),
legend.labs=c("High-Low (76)","Others (292)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
#dev.off()
ggsave(filename = "km_2class_all3.eps",
fallback_resolution = 600,
device = cairo_ps)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
p<-ggsurvplot(fit1,pval = TRUE,
risk.table = TRUE,
legend=c(0.75,0.85),
#legend.labs=c("High-High-Low (HHL) (42)","High (w/o HHL) (84)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
ggsurvplot(fit1,pval = TRUE,
risk.table = TRUE,
legend=c(0.75,0.85),
#legend.labs=c("High-High-Low (HHL) (42)","High (w/o HHL) (84)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
plabel
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
ggsurvplot(fit1,pval = TRUE,
risk.table = TRUE,
legend=c(0.75,0.85),
#legend.labs=c("High-High-Low (HHL) (42)","High (w/o HHL) (84)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.75,0.85),
legend.labs=c("High-High-Low (HHL) (38)","High (w/o HHL) (88)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
ggsave(filename = "km_2class_all4.eps",
fallback_resolution = 600,
device = cairo_ps)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hl_hothers_others.R')
tt[3]
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.8,0.9),
legend.labs=c("High-High (97)","High-Low (76)", "Low (195)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
len(pvalue)
length(pvalue)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_all_patients.R')
tt[3]
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
tt[3]
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hl_hothers_others.R')
View(blca_pred)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
View(blca_pred)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
hist(pvalue)
hist(pvalue,b=50)
hist(pvalue,breaks =50)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
pvalue
pid
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
plabel
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
pvalue[kk]
plabel
tt
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
pid_tmb_pred$preds[jj]
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/hist_entropy.R')
pid_tmb_pred$preds[jj]
# function to plot KM curves
# high low vs high others vs low
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
data_path0<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/patients_all/"
pid_tmb_pred<-read_excel(paste(data_path0,"pid_tmb_pred.xlsx",sep=""),sheet = "Sheet1")
#data_path0<-"E:/Hongming/projects/tcga-bladder-mutationburden/heatmap_blca/"
#pid_pred_gt<-read_excel(paste(data_path0,"pid_pred_gt.xlsx",sep=""),sheet = "Sheet1")
data_path1<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/patients_all/"
entropy_all<-read_excel(paste(data_path1,"entropy_all.xlsx",sep=""),sheet = "Sheet1")
pvalue<-entropy_all$entropy
pid<-entropy_all$`patient ID`
plabel<-vector()
plabel1<-vector()
tt<-quantile(as.numeric(pvalue),c(0.2,0.4,0.5,0.67,0.8))
#plabel1<-(pvalue>tt[3])
plabel1<-(pvalue>tt[3])
plabel1[plabel1==TRUE]<-'High'
plabel1[plabel1==FALSE]<-'Low'
entropy_tmb_high<-vector()
tt<-1
for (kk in 1:length(pid)){
temp_pID<-substring(as.character(pid[kk]),2,24)
for (jj in 1:length(pid_tmb_pred$`patient_names`))
if (temp_pID==substring(as.character(pid_tmb_pred$`patient_names`[jj]),1,23)){
if (pid_tmb_pred$preds[jj]=='High'){
entropy_tmb_high[tt]<-pvalue[kk]
tt<-tt+1
}
break
}
}
hist(entropy_tmb_high,breaks = 20)
# pid2<-vector()
# plabel2<-vector()
# ind=1
# for (kk in 1:length(pid)){
#   if (plabel[kk]=="High-Low") {
#     pid2[ind]<-substring(pid[kk],2,24)
#     plabel2[ind]<-plabel[kk]
#     ind<-ind+1
#   } else if (plabel[kk]=="High-High"){
#     pid2[ind]<-substring(pid[kk],2,24)
#     plabel2[ind]<-'High-High'
#     ind<-ind+1
#   }
#   else {
#     pid2[ind]<-substring(pid[kk],2,24)
#     plabel2[ind]<-"Low others"
#     ind<-ind+1
#   }
# }
#
# blca_pred<-data.frame("patientID"=Reduce(rbind,pid2),"label_class"=Reduce(rbind,plabel2))
# #write.xlsx(blca,"blca.xlsx")
#
# data_path<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/"
# blca_data<-read_excel(paste(data_path,"Table_S1.2017_08_05.xlsx",sep=""),sheet="Master table")
#
#
# futime<-vector()
# fustat<-vector()
# for (nn in 1:length(blca_pred$patientID))
# {
#   temp_pID=as.character(blca_pred$patientID[nn])
#   for (kk in 1:length(blca_data$`Case ID`))
#   {
#     if (substring(temp_pID,1,12)==as.character(blca_data$`Case ID`[kk]))
#     {
#       futime<-c(futime,as.numeric(blca_data$`Combined days to last followup or death`[kk])/30.0)
#       fustat<-c(fustat,as.character(blca_data$`Vital status`[kk]))
#       break
#     }
#   }
# }
#
# blca_pred$futime<-futime
# blca_pred$fustat<-fustat
#
# row_ind<-which(is.na(blca_pred$futime))
# if (length(row_ind)>0) {
#   blca_pred<-blca_pred[-c(row_ind),]   # remove two not available patients
# }
#
# row_ind2<-which(blca_pred$futime<0)
# if (length(row_ind2)>0){
#   blca_pred<-blca_pred[-c(row_ind2),]
# }
#
#
# #dev.off()
# ggsave(filename = "km_3class_all2.eps",
#        fallback_resolution = 600,
#        device = cairo_ps)
#
#
#
length(entropy_tmb_high)
# function to plot KM curves
# high low vs high others vs low
# load packages
library(survival)
library(survminer)
library(dplyr)
library(readxl)
library(R.matlab)
library(openxlsx)
data_path0<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/patients_all/"
pid_tmb_pred<-read_excel(paste(data_path0,"pid_tmb_pred.xlsx",sep=""),sheet = "Sheet1")
#data_path0<-"E:/Hongming/projects/tcga-bladder-mutationburden/heatmap_blca/"
#pid_pred_gt<-read_excel(paste(data_path0,"pid_pred_gt.xlsx",sep=""),sheet = "Sheet1")
data_path1<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/patients_all/"
entropy_all<-read_excel(paste(data_path1,"entropy_all.xlsx",sep=""),sheet = "Sheet1")
pvalue<-entropy_all$entropy
pid<-entropy_all$`patient ID`
plabel<-vector()
plabel1<-vector()
tt<-quantile(as.numeric(pvalue),c(0.2,0.4,0.5,0.67,0.8))
#plabel1<-(pvalue>tt[3])
plabel1<-(pvalue>tt[3])
plabel1[plabel1==TRUE]<-'High'
plabel1[plabel1==FALSE]<-'Low'
entropy_tmb_high<-vector()
tt<-1
for (kk in 1:length(pid)){
temp_pID<-substring(as.character(pid[kk]),2,24)
for (jj in 1:length(pid_tmb_pred$`patient_names`))
if (temp_pID==substring(as.character(pid_tmb_pred$`patient_names`[jj]),1,23)){
if (pid_tmb_pred$preds[jj]=='High'){
entropy_tmb_high[tt]<-pvalue[kk]
tt<-tt+1
}
break
}
}
hist(entropy_tmb_high,breaks = 100)
# pid2<-vector()
# plabel2<-vector()
# ind=1
# for (kk in 1:length(pid)){
#   if (plabel[kk]=="High-Low") {
#     pid2[ind]<-substring(pid[kk],2,24)
#     plabel2[ind]<-plabel[kk]
#     ind<-ind+1
#   } else if (plabel[kk]=="High-High"){
#     pid2[ind]<-substring(pid[kk],2,24)
#     plabel2[ind]<-'High-High'
#     ind<-ind+1
#   }
#   else {
#     pid2[ind]<-substring(pid[kk],2,24)
#     plabel2[ind]<-"Low others"
#     ind<-ind+1
#   }
# }
#
# blca_pred<-data.frame("patientID"=Reduce(rbind,pid2),"label_class"=Reduce(rbind,plabel2))
# #write.xlsx(blca,"blca.xlsx")
#
# data_path<-"E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/"
# blca_data<-read_excel(paste(data_path,"Table_S1.2017_08_05.xlsx",sep=""),sheet="Master table")
#
#
# futime<-vector()
# fustat<-vector()
# for (nn in 1:length(blca_pred$patientID))
# {
#   temp_pID=as.character(blca_pred$patientID[nn])
#   for (kk in 1:length(blca_data$`Case ID`))
#   {
#     if (substring(temp_pID,1,12)==as.character(blca_data$`Case ID`[kk]))
#     {
#       futime<-c(futime,as.numeric(blca_data$`Combined days to last followup or death`[kk])/30.0)
#       fustat<-c(fustat,as.character(blca_data$`Vital status`[kk]))
#       break
#     }
#   }
# }
#
# blca_pred$futime<-futime
# blca_pred$fustat<-fustat
#
# row_ind<-which(is.na(blca_pred$futime))
# if (length(row_ind)>0) {
#   blca_pred<-blca_pred[-c(row_ind),]   # remove two not available patients
# }
#
# row_ind2<-which(blca_pred$futime<0)
# if (length(row_ind2)>0){
#   blca_pred<-blca_pred[-c(row_ind2),]
# }
#
#
# #dev.off()
# ggsave(filename = "km_3class_all2.eps",
#        fallback_resolution = 600,
#        device = cairo_ps)
#
#
#
<<<<<<< HEAD
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_high.R')
ggsurvplot(fit1,pval = TRUE,
risk.table = TRUE,
legend=c(0.75,0.85),
#legend.labs=c("High-High-Low (HHL) (42)","High (w/o HHL) (84)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
View(blca_pred)
View(blca_pred)
View(blca_pred)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_low.R')
View(pid_tmb_pred)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_low.R')
View(blca_pred)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_WEX_low.R')
View(blca_pred)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_all_patients.R', echo=TRUE)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_all_patients.R', echo=TRUE)
length(futime)
futime
View(pid_tmb_pred)
View(entropy_all)
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_all_patients.R', echo=TRUE)
row_ind
row_ind2
blca_pred$futime
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_all_patients.R', echo=TRUE)
View(blca_pred)
row_ind
row_ind2
=======
>>>>>>> parent of 24034a7... commit
debugSource('E:/Hongming/projects/tcga-bladder-mutationburden/tcga_tmb_prediction/step07)_plot_km_curves/km_hl_others_all_patients.R', echo=TRUE)
tt
ggsurvplot(fit1,pval = TRUE,
#risk.table = TRUE,
legend=c(0.75,0.85),
legend.labs=c("High-Low (76)","Others (292)"),
legend.title="Categories",
xlab="Time in months")+ggtitle("Whole Bladder Cohort")
View(blca_pred)
tt
